{
    "swagger": "2.0",
    "info": {
        "description": "Not over engineering at all",
        "title": "Chula Overflow Backend Doc",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login with given email session are store in cookie as 'sid'. If no email were found in database, it will create one.\nCookies are automatically store in swag",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "format": "email",
                        "description": "email use for login",
                        "name": "login",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "description": "Get current session detail",
                "tags": [
                    "Auth"
                ],
                "summary": "Me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/auth/revoke": {
            "get": {
                "description": "Revoke session (expire session cookie from client)",
                "tags": [
                    "Auth"
                ],
                "summary": "Revoke",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/course": {
            "get": {
                "description": "get detail summary for all course",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "GetAllCourseSummary",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CourseSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/course/:course_id": {
            "get": {
                "description": "Get specific course",
                "tags": [
                    "Course"
                ],
                "summary": "GetCourse",
                "parameters": [
                    {
                        "type": "string",
                        "description": "course ID",
                        "name": "course_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Course"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/exam/:exam_id": {
            "get": {
                "description": "Get specific exam",
                "tags": [
                    "Exam"
                ],
                "summary": "GetExam",
                "parameters": [
                    {
                        "type": "string",
                        "description": "exam ID",
                        "name": "exam_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Exam"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/thread": {
            "post": {
                "description": "Create thread (require session)",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Thread"
                ],
                "summary": "CreateThread",
                "parameters": [
                    {
                        "description": "Thread information",
                        "name": "thread",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateThread"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateThreadResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/thread/:thread_id": {
            "get": {
                "description": "get specific thread",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Thread"
                ],
                "summary": "GetThread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Thread id",
                        "name": "thread_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.Thread"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        },
        "/thread/:thread_id/reply": {
            "post": {
                "description": "Create reply in thread (require session)",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Thread"
                ],
                "summary": "CreateReply",
                "parameters": [
                    {
                        "description": "Reply information",
                        "name": "reply",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateReply"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Thread id",
                        "name": "thread_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    },
                    "503": {
                        "description": "Service Unavailable"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Course": {
            "type": "object",
            "properties": {
                "course_name": {
                    "type": "string",
                    "example": "2110101 Calculus I"
                },
                "exams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ExamSummary"
                    }
                }
            }
        },
        "dto.CourseSummary": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "course_name": {
                    "type": "string",
                    "example": "2011 - S1 - Final"
                },
                "thread_count": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "dto.CreateReply": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "1+1=3"
                }
            }
        },
        "dto.CreateThread": {
            "type": "object",
            "properties": {
                "course_name": {
                    "type": "string",
                    "example": "2110101 Calculus I"
                },
                "exam_name": {
                    "type": "string",
                    "example": "2011 - S1 - Final"
                },
                "problem_description": {
                    "type": "string",
                    "example": "What is 'Monad'?"
                },
                "problem_name": {
                    "type": "string",
                    "example": "1+1=???"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "calculus",
                        "2110101",
                        "limit",
                        "hard"
                    ]
                }
            }
        },
        "dto.CreateThreadResponse": {
            "type": "object",
            "properties": {
                "thread_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011!(OBJECTID)"
                }
            }
        },
        "dto.Exam": {
            "type": "object",
            "properties": {
                "exam_name": {
                    "type": "string",
                    "example": "2011 - S1 - Final"
                },
                "threads": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ThreadSummary"
                    }
                }
            }
        },
        "dto.ExamSummary": {
            "type": "object",
            "properties": {
                "exam_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011"
                },
                "exam_name": {
                    "type": "string",
                    "example": "2011 - S1 - Final"
                },
                "thread_count": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "6530000021@student.chula.ac.th"
                }
            }
        },
        "dto.MeResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/dto.User"
                }
            }
        },
        "dto.Reply": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "1+1=3"
                },
                "downvote": {
                    "type": "integer",
                    "example": 420
                },
                "thread_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011!(OBJECTID)"
                },
                "upvote": {
                    "type": "integer",
                    "example": 42
                }
            }
        },
        "dto.Thread": {
            "type": "object",
            "properties": {
                "downvote": {
                    "type": "integer",
                    "example": 12
                },
                "problem_description": {
                    "type": "string",
                    "example": "What is 'Monad'?"
                },
                "problem_name": {
                    "type": "string",
                    "example": "1+1=???"
                },
                "replies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Reply"
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "calculus",
                        "2110101",
                        "limit",
                        "hard"
                    ]
                },
                "thread_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011!(OBJECTID)"
                },
                "upvote": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "dto.ThreadSummary": {
            "type": "object",
            "properties": {
                "downvote": {
                    "type": "integer",
                    "example": 12
                },
                "problem_description": {
                    "type": "string",
                    "example": "What is 'Monad'?"
                },
                "problem_name": {
                    "type": "string",
                    "example": "1+1=???"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "calculus",
                        "2110101",
                        "limit",
                        "hard"
                    ]
                },
                "thread_id": {
                    "type": "string",
                    "example": "507f1f77bcf86cd799439011!(OBJECTID)"
                },
                "upvote": {
                    "type": "integer",
                    "example": 12
                }
            }
        },
        "dto.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "6530000021@student.chula.ac.th"
                }
            }
        }
    }
}