basePath: /
definitions:
  dto.Course:
    properties:
      course_name:
        example: 2110101 Calculus I
        type: string
      exams:
        items:
          $ref: '#/definitions/dto.ExamSummary'
        type: array
    type: object
  dto.CourseSummary:
    properties:
      course_id:
        example: 507f1f77bcf86cd799439011
        type: string
      course_name:
        example: 2011 - S1 - Final
        type: string
      thread_count:
        example: 12
        type: integer
    type: object
  dto.CreateReply:
    properties:
      body:
        example: 1+1=3
        type: string
    type: object
  dto.CreateThread:
    properties:
      course_name:
        example: 2110101 Calculus I
        type: string
      exam_name:
        example: 2011 - S1 - Final
        type: string
      problem_description:
        example: What is 'Monad'?
        type: string
      problem_name:
        example: 1+1=???
        type: string
      tags:
        example:
          - calculus
          - '2110101'
          - limit
          - hard
        items:
          type: string
        type: array
    type: object
  dto.CreateThreadResponse:
    properties:
      thread_id:
        example: 507f1f77bcf86cd799439011!(OBJECTID)
        type: string
    type: object
  dto.Exam:
    properties:
      exam_name:
        example: 2011 - S1 - Final
        type: string
      threads:
        items:
          $ref: '#/definitions/dto.ThreadSummary'
        type: array
    type: object
  dto.ExamSummary:
    properties:
      exam_id:
        example: 507f1f77bcf86cd799439011
        type: string
      exam_name:
        example: 2011 - S1 - Final
        type: string
      thread_count:
        example: 12
        type: integer
    type: object
  dto.Login:
    properties:
      email:
        example: 6530000021@student.chula.ac.th
        type: string
    type: object
  dto.MeResponse:
    properties:
      user:
        $ref: '#/definitions/dto.User'
    type: object
  dto.Reply:
    properties:
      body:
        example: 1+1=3
        type: string
      downvote:
        example: 420
        type: integer
      thread_id:
        example: 507f1f77bcf86cd799439011!(OBJECTID)
        type: string
      upvote:
        example: 42
        type: integer
    type: object
  dto.Thread:
    properties:
      downvote:
        example: 12
        type: integer
      problem_description:
        example: What is 'Monad'?
        type: string
      problem_name:
        example: 1+1=???
        type: string
      replies:
        items:
          $ref: '#/definitions/dto.Reply'
        type: array
      tags:
        example:
          - calculus
          - '2110101'
          - limit
          - hard
        items:
          type: string
        type: array
      thread_id:
        example: 507f1f77bcf86cd799439011!(OBJECTID)
        type: string
      upvote:
        example: 12
        type: integer
    type: object
  dto.ThreadSummary:
    properties:
      downvote:
        example: 12
        type: integer
      problem_description:
        example: What is 'Monad'?
        type: string
      problem_name:
        example: 1+1=???
        type: string
      tags:
        example:
          - calculus
          - '2110101'
          - limit
          - hard
        items:
          type: string
        type: array
      thread_id:
        example: 507f1f77bcf86cd799439011!(OBJECTID)
        type: string
      upvote:
        example: 12
        type: integer
    type: object
  dto.User:
    properties:
      email:
        example: 6530000021@student.chula.ac.th
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: Not over engineering at all
  termsOfService: http://swagger.io/terms/
  title: Chula Overflow Backend Doc
  version: '1.0'
paths:
  /auth/login:
    post:
      consumes:
        - application/json
      description: |-
        Login with given email session are store in cookie as 'sid'. If no email were found in database, it will create one.
        Cookies are automatically store in swag
      parameters:
        - description: email use for login
          format: email
          in: body
          name: login
          schema:
            $ref: '#/definitions/dto.Login'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
      summary: Login
      tags:
        - Auth
  /auth/me:
    get:
      description: Get current session detail
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dto.MeResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: Me
      tags:
        - Auth
  /auth/revoke:
    get:
      description: Revoke session (expire session cookie from client)
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      summary: Revoke
      tags:
        - Auth
  /course:
    get:
      description: get detail summary for all course
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CourseSummary'
            type: array
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: GetAllCourseSummary
      tags:
        - Course
  /course/:course_id:
    get:
      description: Get specific course
      parameters:
        - description: course ID
          in: path
          name: course_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dto.Course'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: GetCourse
      tags:
        - Course
  /exam/:exam_id:
    get:
      description: Get specific exam
      parameters:
        - description: exam ID
          in: path
          name: exam_id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dto.Exam'
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: GetExam
      tags:
        - Exam
  /thread:
    post:
      consumes:
        - application/json
      description: Create thread (require session)
      parameters:
        - description: Thread information
          in: body
          name: thread
          required: true
          schema:
            $ref: '#/definitions/dto.CreateThread'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dto.CreateThreadResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: CreateThread
      tags:
        - Thread
  /thread/:thread_id:
    get:
      consumes:
        - application/json
      description: get specific thread
      parameters:
        - description: Thread id
          in: path
          name: thread_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/dto.Thread'
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: GetThread
      tags:
        - Thread
  /thread/:thread_id/reply:
    post:
      consumes:
        - application/json
      description: Create reply in thread (require session)
      parameters:
        - description: Reply information
          in: body
          name: reply
          required: true
          schema:
            $ref: '#/definitions/dto.CreateReply'
        - description: Thread id
          in: path
          name: thread_id
          required: true
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
        '503':
          description: Service Unavailable
      summary: CreateReply
      tags:
        - Thread
swagger: '2.0'
