// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.2
// source: thread.proto

package proto

import (
	grpc "google.golang.org/grpc"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ThreadClient is the client API for Thread service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ThreadClient interface {
}

type threadClient struct {
	cc grpc.ClientConnInterface
}

func NewThreadClient(cc grpc.ClientConnInterface) ThreadClient {
	return &threadClient{cc}
}

// ThreadServer is the server API for Thread service.
// All implementations should embed UnimplementedThreadServer
// for forward compatibility
type ThreadServer interface {
}

// UnimplementedThreadServer should be embedded to have forward compatible implementations.
type UnimplementedThreadServer struct {
}

// UnsafeThreadServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ThreadServer will
// result in compilation errors.
type UnsafeThreadServer interface {
	mustEmbedUnimplementedThreadServer()
}

func RegisterThreadServer(s grpc.ServiceRegistrar, srv ThreadServer) {
	s.RegisterService(&Thread_ServiceDesc, srv)
}

// Thread_ServiceDesc is the grpc.ServiceDesc for Thread service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var Thread_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "thread.Thread",
	HandlerType: (*ThreadServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "thread.proto",
}
